<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>[Mod] DM Project</name>
    <code>dm_project</code>
    <version>2.3</version>
    <author>by DiMoss</author>
    <link>http://forum.opencart-russia.ru/members/dimoss.3919/</link>

    <!-- ======================================= //FRONTEND// ======================================= -->

    <!-- *** START LANGUAGE (Frontend) *** -->

    <!-- 1. RU-RU/EN-GB LANGUAGE (Frontend) -->

    <file path="catalog/language/ru-ru/ru-ru.php">
        <operation>
            <search><![CDATA[
            $_['error_curl']
            ]]></search>
            <add position="after"><![CDATA[
//mod
$_['text_reset']                = 'Сбросить все фильтры';
$_['text_stock']                = 'Наличие:';
$_['text_discount']             = ' или более: ';
$_['text_points']               = 'Цена в бонусных баллах:';
$_['text_to_manufacturer_page'] = 'На страницу производителя';
$_['text_filter_manufacturer']  = 'Отфильтровать по производителю';
$_['text_special_logged']       = 'Скидка для зарегистрированных: <span>%s</span>';
$_['text_open_map']             = 'Открыть карту';
$_['text_close_map']            = 'Закрыть карту';
$_['text_contacts']             = 'Контакты';
$_['text_for_customer']         = 'Покупателю';
$_['text_about_us']             = 'О нас';

$_['entry_in_stock']            = 'только в наличии';

$_['button_instock']            = 'В наличии';
$_['button_all']                = 'Все';
$_['button_pre_order']          = 'Под заказ';
$_['button_no_stock']           = 'Нет в наличии';
$_['button_payment']            = 'Оплатить заказ';
$_['button_invoice_download']   = 'Скачать счет на оплату';

$_['tab_description']           = 'Описание';
//mod
            ]]></add>
        </operation>
    </file>
    <file path="catalog/language/en-gb/en-gb.php">
        <operation>
            <search><![CDATA[
            $_['error_curl']
            ]]></search>
            <add position="after"><![CDATA[
//mod
$_['text_reset']                = 'Reset all filters';
$_['text_stock']                = 'Availability:';
$_['text_discount']             = ' or more ';
$_['text_points']               = 'Price in reward points:';
$_['text_to_manufacturer_page'] = 'To manufacturer page';
$_['text_filter_manufacturer']  = 'Filter manufacturer';
$_['text_special_logged']       = 'Discount for registered users: <span>%s</span>';
$_['text_open_map']             = 'Open a map';
$_['text_close_map']            = 'Close a map';
$_['text_contacts']             = 'Contacts';
$_['text_for_customer']         = 'For a customer';
$_['text_about_us']             = 'About us';

$_['entry_in_stock']            = 'in stock';

$_['button_pre_order']          = 'Pre-order';
$_['button_no_stock']           = 'Not available';
$_['button_payment']            = 'Pay an order';
$_['button_invoice_download']   = 'Download invoice';

$_['tab_description']           = 'Description';
//mod
            ]]></add>
        </operation>
    </file>

    <!-- 1.1 PRODUCT LANGUAGE (Frontend) -->

    <file path="catalog/language/ru-ru/product/product.php">
        <operation>
            <search><![CDATA[
            $_['text_login']                              = 'Пожалуйста <a href="%s">авторизируйтесь</a> или <a href="%s">создайте учетную запись</a> перед тем как написать отзыв';
            ]]></search>
            <add position="after" trim="true"><![CDATA[
$_['text_login_ajax']                         = 'Пожалуйста <button type="button" onclick="%s"><strong>авторизируйтесь</strong></button> или <a href="%s"><strong>создайте учетную запись</strong></a> перед тем как написать отзыв';
            ]]></add>
        </operation>
    </file>

    <file path="catalog/language/en-gb/product/product.php">
        <operation>
            <search><![CDATA[
            $_['text_login']               = 'Please <a href="%s">login</a> or <a href="%s">register</a> to review';
            ]]></search>
            <add position="after" trim="true"><![CDATA[
$_['text_login_ajax']          = 'Please <button type="button" onclick="%s"><strong>login</strong></button> or <a href="%s"><strong>register</strong></a> to review';
            ]]></add>
        </operation>
    </file>

    <!-- 2. FOOTER LANGUAGE (Frontend) -->

    <file path="catalog/language/ru-ru/common/footer.php">
        <operation>
            <search><![CDATA[
            $_['text_powered']      = 'Работает на <a href="http://opencart-russia.ru">OpenCart "Русская сборка"</a><br /> %s &copy; %s';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
//mod
$_['text_catalog']      = 'Каталог';
$_['text_powered']      = '%s &copy; %s';
//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $_['text_service']      = 'Служба поддержки';
            ]]></search>
            <add position="replace" trim="true" offset="-1"><![CDATA[
//mod
$_['text_information']  = 'О нас';
$_['text_service']      = 'Помощь';
//mod
            ]]></add>
        </operation>
    </file>
    <file path="catalog/language/en-gb/common/footer.php">
        <operation>
            <search><![CDATA[
            $_['text_powered']      = 'Powered By <a href="http://www.opencart.com">OpenCart</a><br /> %s &copy; %s';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
//mod
$_['text_catalog']      = 'Catalog';
$_['text_powered']      = '%s &copy; %s';
//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $_['text_service']      = 'Customer Service';
            ]]></search>
            <add position="replace" trim="true" offset="-1"><![CDATA[
//mod
$_['text_information']  = 'About us';
$_['text_service']      = 'Help';
//mod
            ]]></add>
        </operation>
    </file>

    <!-- *** //END LANGUAGE (Frontend)// -->



    <!-- *** START MODEL (Frontend) *** -->

    <!-- 1. CATEGORY MODEL (Frontend) -->

    <file path="catalog/model/catalog/category.php">
        <operation>
            <search><![CDATA[
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE c.parent_id = '" . (int)$parent_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "'  AND c.status = '1' ORDER BY c.sort_order, LCASE(cd.name)");
            ]]></search>
            <add position="replace" ><![CDATA[
        //mod
        $sql = "SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE c.parent_id = '" . (int)$parent_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND c.status = '1'";

        $sql .= " AND c.product_display = '0'";

        $sql .= " ORDER BY c.sort_order, LCASE(cd.name)";

        $query = $this->db->query($sql);
        //mod
            ]]></add>
        </operation>
    </file>

    <!-- 2. PRODUCT MODEL (Frontend) -->

    <file path="catalog/model/catalog/product.php">
        <operation>
            <search><![CDATA[
            SELECT DISTINCT *, pd.name AS name, p.image, m.name AS manufacturer,
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            SELECT DISTINCT *, pd.name AS name, p.image, m.name AS manufacturer, m.image as manufacturer_img, p.thumb_width, p.thumb_height,
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND (ps.logged = '0' OR ps.logged = '" . ($this->customer->isLogged() ? 1 : 0) . "') AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'manufacturer'     => $query->row['manufacturer'],
            ]]></search>
            <add position="after"><![CDATA[
                //mod
                'manufacturer_img' => $query->row['manufacturer_img'],
                //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'height'           => $query->row['height'],
            ]]></search>
            <add position="after"><![CDATA[
                //mod
                'thumb_width'      => $query->row['thumb_width'],
			    'thumb_height'     => $query->row['thumb_height'],
			    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $sql .= " LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
        $sql .= " LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id)";

        if (!empty($data['filter_min_price']) && !empty($data['filter_max_price'])) {
            $sql .= " LEFT JOIN " . DB_PREFIX . "product_special ps ON (p.product_id = ps.product_id)";
        }

        if (!empty($data['filter_attribute'])) {
            foreach ($data['filter_attribute'] as $key => $value) {
                $sql .= " LEFT JOIN " . DB_PREFIX . "product_attribute pa_" . (int)$key . " ON (p.product_id = pa_" . (int)$key . ".product_id AND pa_" . (int)$key . ".attribute_id = '" . (int)$key . "')";
            }
        }

        $sql .= " WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			]]></search>
            <add position="before"><![CDATA[
        //mod
        if (!empty($data['filter_min_price']) && !empty($data['filter_max_price'])) {
            $sql .= " AND
            (CASE
                WHEN
                    (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND (ps.logged = '0' OR ps.logged = '" . ($this->customer->isLogged() ? 1 : 0) . "') AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) IS NOT NULL AND p.quantity > '0'
                THEN
                    ps.price >= '" . (float)$data['filter_min_price'] . "' AND ps.price <= '" . (float)$data['filter_max_price'] . "'
                ELSE
                    p.price >= '" . (float)$data['filter_min_price'] . "' AND p.price <= '" . (float)$data['filter_max_price'] . "'
            END)";
        }

        if (isset($data['filter_in_stock']) && $data['filter_in_stock'] == true) {
            $sql .= " AND p.quantity > '0'";
        }

        if (!empty($data['filter_attribute'])) {
            foreach ($data['filter_attribute'] as $key => $value) {
                $sql .= " AND pa_" . (int)$key . ".text LIKE '%" . $this->db->escape($value) . "%'";
            }
        }
        //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add position="before"><![CDATA[
        //mod
		if (isset($data['sort']) && $data['sort'] == 'price') {
		    $data['sort'] = 'p.price';
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
			if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add position="before"><![CDATA[
        //mod
		if (isset($data['sort']) && $data['sort'] == 'price') {
		    $data['sort'] = 'ps.price';
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
            $sql .= " ORDER BY p.sort_order";
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $sql .= " ORDER BY p.quantity DESC, p.sort_order";
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
	        public function getProductSpecials($data = array()) {
            ]]></search>
            <add position="before"><![CDATA[
    //mod
	public function getProductSpecialsLogged($product_id) {
	    if ($this->customer->isLogged()) {
	        return false;
	    } else {
	        $sql = "SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = '" . $product_id . "' AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ps.logged = '1' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1";

            $query = $this->db->query($sql);

	        return $query->row;
	    }
	}
	//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$sql = "SELECT DISTINCT ps.product_id, (SELECT AVG(rating) FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = ps.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating FROM " . DB_PREFIX . "product_special ps LEFT JOIN " . DB_PREFIX . "product p ON (ps.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) GROUP BY ps.product_id";
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
		$sql = "SELECT DISTINCT ps.product_id, (SELECT AVG(rating) FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = ps.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating FROM " . DB_PREFIX . "product_special ps LEFT JOIN " . DB_PREFIX . "product p ON (ps.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id)";

		if (isset($data['filter_category_id'])) {
		    $sql .= " LEFT JOIN " . DB_PREFIX . "product_to_category p2c ON (p.product_id = p2c.product_id) LEFT JOIN " . DB_PREFIX . "category c ON (p2c.category_id = c.category_id)";
        }

        if (!empty($data['filter_min_price']) && !empty($data['filter_max_price'])) {
            $sql .= " AND ps.price >= '" . (float)$data['filter_min_price'] . "' AND ps.price <= '" . (float)$data['filter_max_price'] . "'";
        }

		$sql .= " WHERE p.status = '1' AND p.date_available <= NOW() AND p.quantity > '0' AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND (ps.logged = '0' OR ps.logged = '" . ($this->customer->isLogged() ? 1 : 0) . "') AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW()))";

        if (isset($data['filter_category_id'])) {
            $sql .= " AND c.category_id = '" . $data['filter_category_id'] . "'";
        }

		$sql .= " GROUP BY ps.product_id";
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            public function getProductAttributes($product_id) {
            ]]></search>
            <add position="before"><![CDATA[
    //mod
    public function getProductAttributeValue($data = array()) {
        $query = $this->db->query("SELECT pa.text, ad.name FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (pa.attribute_id = ad.attribute_id) WHERE pa.product_id = '" . (int)$data['product_id'] . "' AND pa.attribute_id = '" . (int)$data['attribute_id'] . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "'");

        return $query->row;
    }

    public function getAttributeName($attribute_id) {
	    $query = $this->db->query("SELECT name FROM " . DB_PREFIX . "attribute_description WHERE attribute_id = '" . (int)$attribute_id . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");

	    return $query->row;
	}
	//mod
            ]]></add>
        </operation>
    </file>

    <!-- *** //END MODEL (Frontend)// *** -->



    <!-- *** START CONTROLLER (Frontend) *** -->

    <!-- 1. CATEGORY CONTROLLER (Frontend) -->

    <file path="catalog/controller/product/category.php">
        <operation>
            <search><![CDATA[
		$this->load->model('tool/image');
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
        $this->load->model('catalog/manufacturer');
        $this->load->model('catalog/parent_product');

        $this->load->model('tool/image');

        $this->load->helper('view_builder');

        $this->document->addScript('catalog/view/javascript/jquery/blueimp/js/blueimp-gallery.min.js');
        $this->document->addStyle('catalog/view/javascript/jquery/blueimp/css/blueimp-gallery.min.css');

        $this->document->addStyle('catalog/view/javascript/jquery/slick/slick.css');
		$this->document->addStyle('catalog/view/javascript/jquery/slick/slick-theme.css');
		$this->document->addScript('catalog/view/javascript/jquery/slick/slick.min.js');

        $data['popup_view_data'] = $this->config->get($this->config->get('config_theme') . '_popup_view_data');
        $data['popup_view_text'] = $this->language->load('common/popup_view');
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		    if (isset($this->request->get['filter'])) {
            ]]></search>
            <add position="before"><![CDATA[
        //mod
        if (isset($this->request->get['in_stock'])) {
            $in_stock = $this->request->get['in_stock'];
        } else {
            $in_stock = '';
        }

        if (isset($this->request->get['manufacturer_id'])) {
            $manufacturer_id = $this->request->get['manufacturer_id'];
        } else {
            $manufacturer_id = '';
        }

        if (isset($this->request->get['min_price'])) {
            $min_price = $this->request->get['min_price'];
        } else {
            $min_price = '';
        }

        if (isset($this->request->get['max_price'])) {
            $max_price = $this->request->get['max_price'];
        } else {
            $max_price = '';
        }

        if (isset($this->request->get['attribute_filter'])) {
            $attribute_filter = $this->request->get['attribute_filter'];
        } else {
            $attribute_filter = '';
        }
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $sort = 'p.sort_order';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $sort = 'p.quantity'; //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $order = 'ASC';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $order = 'DESC'; //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0,2"><![CDATA[
            $url .= '&sort=' . $this->request->get['sort'];
            ]]></search>
            <add position="before" offset="1"><![CDATA[
            //mod
            if (isset($this->request->get['in_stock'])) {
				$in_stock_filter = '&in_stock=true';
            } else {
				$in_stock_filter = '';
			}

			if (isset($this->request->get['manufacturer_id'])) {
				$manufacturer_filter = '&manufacturer_id=' . $this->request->get['manufacturer_id'];
            } else {
				$manufacturer_filter = '';
			}
            //mod
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
            $url .= '&sort=' . $this->request->get['sort'];
            ]]></search>
            <add position="before" offset="1"><![CDATA[
            //mod
            if (isset($this->request->get['in_stock'])) {
				$in_stock_filter = '&in_stock=true';
            } else {
				$in_stock_filter = '';
			}
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->document->setTitle($category_info['meta_title']);
            ]]></search>
            <add position="before"><![CDATA[
            //mod
            $this->load->model('service/landing_page');

            $landing_page = $this->model_service_landing_page->isLandingPage($category_info['category_id']);
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['heading_title'] = $category_info['name'];
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $data['heading_title'] = $landing_page ? $landing_page['landing_description']['title'] : $category_info['name'];
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['text_limit'] = $this->language->get('text_limit');
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $data['text_discount'] = $this->language->get('text_discount');
            $data['text_points'] = $this->language->get('text_points');
            $data['text_to_manufacturer_page'] = $this->language->get('text_to_manufacturer_page');
            $data['text_filter_manufacturer'] = $this->language->get('text_filter_manufacturer');
            $data['text_stock'] = $this->language->get('text_stock');
            $data['text_loading'] = $this->language->get('text_loading');
            $data['text_from'] = $this->language->get('text_from');
            $data['text_to'] = $this->language->get('text_to');
            $data['text_reward'] = $this->language->get('text_reward');

            $data['entry_in_stock'] = $this->language->get('entry_in_stock');

            $data['stock_checkout'] = $this->config->get('config_stock_checkout');
            $data['stock_display'] = $this->config->get('config_stock_display');

            $data['button_no_stock'] = $this->language->get('button_no_stock');
            $data['button_pre_order'] = $this->language->get('button_pre_order');
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['thumb'] = $this->model_tool_image->resize($category_info['image'], $this->config->get($this->config->get('config_theme') . '_image_category_width'), $this->config->get($this->config->get('config_theme') . '_image_category_height'));
            ]]></search>
            <add position="replace" offset="-1"><![CDATA[
            //mod
            if ($category_info['image']) {
                $thumb = $this->model_tool_image->resize($category_info['image'], getimagesize(DIR_IMAGE . $category_info['image'])[0], getimagesize(DIR_IMAGE . $category_info['image'])[1]);

                $data['thumb'] = array(
                    'thumb'      => $thumb,
                    'background' => '<div style="position: absolute; display: block; width: 100%; height: 100%; bottom: 0; opacity: 0.5; background: url(' . $thumb . ') center repeat-x;"></div>'
                ); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['description'] = html_entity_decode($category_info['description'], ENT_QUOTES, 'UTF-8');
            ]]></search>
            <add position="replace"><![CDATA[
            //mod
			$data['description']     = html_entity_decode(($landing_page ? $landing_page['landing_description']['description'] : $category_info['description']), ENT_QUOTES, 'UTF-8');
			$data['add_description'] = html_entity_decode(($landing_page ? NULL : $category_info['add_description']), ENT_QUOTES, 'UTF-8');
			//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
            //mod
            if (!$category_info['product_display']) {
                $filter_data = array (
                    'filter_category_id'     => $category_id,
                    'filter_manufacturer_id' => $manufacturer_id,
                    'filter_in_stock'        => $in_stock,
                    'filter_min_price'       => $min_price,
                    'filter_max_price'       => $max_price,
                    'filter_attribute'       => $attribute_filter,
                    'sort'                   => $sort,
                    'order'                  => $order,
                    'start'                  => ($page - 1) * $limit,
                    'limit'                  => $limit
                );

                $data['parent_id'] = $category_id;

                $results = $this->model_catalog_parent_product->getProductsAnyType($filter_data);

                $results_total = $this->model_catalog_parent_product->getTotalProductsAnyType($filter_data);

                $data['products_any_type'] = productListView(
                    $this,
                    $products_type = 'products_category',
                    $results,
                    $category_info,
                    $url,
                    $in_stock,
                    $data,
                    $filter_data
                );

                $data['filter_manufacturer'] = $this->load->controller('common/filter/filter_manufacturer', $filter_data);
                $data['filter_attribute'] = $this->load->controller('common/filter/filter_attribute', $filter_data);
                $data['filter_price'] = $this->load->controller('common/filter/filter_price', $filter_data);
                $data['filter_selected'] = $this->load->controller('common/filter/filter_selected', $this->request->get);
            }
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'limit'              => $limit
            ]]></search>
            <add position="replace" offset="-1"><![CDATA[
				//'start'            => ($page - 1) * $limit,
				//'limit'            => $limit
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $results = $this->model_catalog_product->getProducts($filter_data);
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $results = $category_info['product_display'] ? $this->model_catalog_product->getProducts($filter_data) : array(); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $product_total = $this->model_catalog_product->getTotalProducts($filter_data);
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $product_total = $category_info['product_display'] ? $this->model_catalog_product->getTotalProducts($filter_data) : $results_total; //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
            ]]></search>
            <add position="replace" offset="-3"><![CDATA[
                //mod
                $add_images = array();

			    $images_additional = $this->model_catalog_product->getProductImages($result['product_id']);

                if ($images_additional && $result['image'] && $result['thumb_width'] && $result['thumb_height']) {
                    $big_width = $result['thumb_width'];
                    $big_height = $result['thumb_height'];
                } elseif ($images_additional) {
                    $big_width = $this->config->get($this->config->get('config_theme') . '_image_product_width');
                    $big_height = $this->config->get($this->config->get('config_theme') . '_image_product_height');
                }

			    foreach ($images_additional as $image_additional) {
			    	$add_images[] = array(
			    		'popup' => $this->model_tool_image->resize($image_additional['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
                        'thumb' => $this->model_tool_image->resize($image_additional['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
                        'big_thumb' => $this->model_tool_image->resize($image_additional['image'], $big_width, $big_height)
			    	);
			    }

                if ($result['image'] && $category_info['thumb_width'] && $category_info['thumb_height']) {
        	    	$image = $this->model_tool_image->resize($result['image'], $category_info['thumb_width'], $category_info['thumb_height']);
        	    	$small_image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
        	    	$popup = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'));
                } elseif ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
                    $small_image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
                    $popup = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'));
                } elseif ($category_info['thumb_width'] && $category_info['thumb_height']) {
    		    	$image = $this->model_tool_image->resize('placeholder.png', $category_info['thumb_width'], $category_info['thumb_height']);
    		    	$small_image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
    		    	$popup = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'));
                } else {
    		    	$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
    		    	$small_image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')); //mod
    		    	$popup = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'));
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			if ((float)$result['special']) {
            ]]></search>
            <add position="replace" offset="4"><![CDATA[
                //mod
                if ((float)$result['special'] && $result['quantity'] > 0) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

                $special_logged_info = $this->model_catalog_product->getProductSpecialsLogged($result['product_id']);

                if ($price && !empty($special_logged_info['price']) && $result['quantity'] > 0) {
                    $special_logged = sprintf($this->language->get('text_special_logged'), $this->currency->format($this->tax->calculate($price - $special_logged_info['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']));
                } else {
                    $special_logged = false;
                }

                if ($result['quantity'] <= 0) {
                    $product_stock = $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $product_stock = $result['quantity'];
                } else {
				    $product_stock = $this->language->get('text_instock');
			    }

                $product_manufacturer = array();

                if ($result['manufacturer_id']) {
                    $product_manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($result['manufacturer_id']);

                    if ($product_manufacturer_info) {
                        if ($product_manufacturer_info['image']) {
                            $logo = $this->model_tool_image->resize($product_manufacturer_info['image'], $this->config->get($this->config->get('config_theme') . '_manufacturer_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_manufacturer_image_thumb_height'));
                        } else {
                            $logo = false;
                        }

                        $product_manufacturer = array(
                            'name'            => $product_manufacturer_info['name'],
                            'image'           => $logo,
                            'id'              => $product_manufacturer_info['manufacturer_id'],
                            'href'            => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $product_manufacturer_info['manufacturer_id'])
                        );
                    }
                }
                //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'thumb'       => $image,
            ]]></search>
            <add position="after"><![CDATA[
                    //mod
                    'small_thumb'      => $small_image,
                    'images'           => $add_images,
					'popup'            => $popup,
                    'special_logged'   => $special_logged,
                    'stock'            => $product_stock,
                    'stock_qty'        => $result['quantity'],
					'reward'           => $result['reward'],
					'model'            => $result['model'],
					'attribute_groups' => $this->model_catalog_product->getProductAttributes($result['product_id']),
					'manufacturer_img' => $product_manufacturer,
					'manufacturer'     => $result['manufacturer'],
					'manufacturers'    => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $result['manufacturer_id']),
					//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            'description' => $result['description'] ? html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8') : false, //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['sorts'] = array();
            ]]></search>
            <add position="replace" offset="56"><![CDATA[
            //mod
			if (isset($this->request->get['manufacturer_id'])) {
				$manufacturer_filter = '&manufacturer_id=' . $this->request->get['manufacturer_id'];
            } else {
				$manufacturer_filter = '';
			}

			if (isset($this->request->get['attribute_filter'])) {
			    $attribute_filter = '';

                foreach ($this->request->get['attribute_filter'] as $key => $attribute_value) {
                    $attribute_filter .= '&attribute_filter[' . $key . ']=' . $attribute_value;
                }
            } else {
                $attribute_filter = '';
            }

		    if (isset($this->request->get['min_price'])) {
                $min_filter_price = '&min_price=' . $this->request->get['min_price'];
            } else {
                $min_filter_price = '';
            }

            if (isset($this->request->get['max_price'])) {
                $max_filter_price = '&max_price=' . $this->request->get['max_price'];
            } else {
                $max_filter_price = '';
            }

            if (isset($this->request->get['in_stock'])) {
				$in_stock_filter = '&in_stock=true';
            } else {
				$in_stock_filter = '';
			}

            $url_filter = array(
                'manufacturer_filter' => $manufacturer_filter,
                'attribute_filter'    => $attribute_filter,
                'min_filter_price'    => $min_filter_price,
                'max_filter_price'    => $max_filter_price,
                'in_stock_filter'     => $in_stock_filter
            );

			if (!$category_info['product_display']) {
			    $data['product_sorts'] = array();

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_default'),
			    	'value' => 'sort_order-ASC',
			    	'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_name_asc'),
			    	'value' => 'name-ASC',
			    	'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=name&order=ASC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_name_desc'),
			    	'value' => 'name-DESC',
			    	'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=name&order=DESC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_price_asc'),
			    	'value' => 'price-ASC',
			    	'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=price&order=ASC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_price_desc'),
			    	'value' => 'price-DESC',
			    	'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=price&order=DESC' . $url . implode('', array_values($url_filter)))
			    );
			}
			//mod
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
            . $url)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            . $url . $in_stock_filter) //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0,2,3,4,5,6,7,8,9,10,11"><![CDATA[
            . $url)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            . $url . $manufacturer_filter . $in_stock_filter) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            . $url . '&limit=' . $value)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            . $url . implode('', array_values($url_filter)) . '&limit=' . $value) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$pagination->url = $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&page={page}');
			]]></search>
            <add position="replace" trim="true"><![CDATA[
            $pagination->url = $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . implode('', array_values($url_filter)) . '&page={page}'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->document->addLink($this->url->link('product/category', 'path=' . $category_info['category_id'] . '&page='. ($page + 1), true), 'next');
            ]]></search>
            <add position="replace" offset="-9"><![CDATA[
            //mod
            $canonicalUrl = $landing_page ? $landing_page['landing_canonical'] : ('path=' . $category_info['category_id']);

            if ($page == 1) {
                $this->document->addLink($this->url->link('product/category', $canonicalUrl, true), 'canonical');
            } elseif ($page == 2) {
                $this->document->addLink($this->url->link('product/category', $canonicalUrl, true), 'canonical');
                $this->document->addLink($this->url->link('product/category', $canonicalUrl, true), 'prev');
            } else {
                $this->document->addLink($this->url->link('product/category', $canonicalUrl, true), 'canonical');
                $this->document->addLink($this->url->link('product/category', $canonicalUrl . '&page=' . ($page - 1), true), 'prev');
            }

            if ($limit && ceil($product_total / $limit) > $page) {
                $this->document->addLink($this->url->link('product/category', $canonicalUrl . '&page=' . ($page + 1), true), 'next'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['limit'] = $limit;
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $url_filter = array(
                'manufacturer_filter' => $manufacturer_filter,
                'attribute_filter'    => $attribute_filter,
                'min_filter_price'    => $min_filter_price,
                'max_filter_price'    => $max_filter_price
            );

            $data['url'] = html_entity_decode($this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . implode('', array_values($url_filter))), ENT_QUOTES, 'UTF-8');
            $data['in_stock'] = $in_stock;
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->response->setOutput($this->load->view('product/category', $data));
            ]]></search>
            <add position="replace"><![CDATA[
            //mod
            if ($category_info['product_display']) {
                $this->response->setOutput($this->load->view('product/product_category', $data));
			} elseif ($category_info['category_display'] && file_exists(DIR_TEMPLATE  . $this->config->get('config_theme') . '/template/custom/category/' . $category_info['category_display'])) {
                $this->response->setOutput($this->load->view('custom/category/' . $category_info['category_display'], $data));
            } else {
                $this->response->setOutput($this->load->view('product/category', $data));
            }
            //mod
            ]]></add>
        </operation>
    </file>

    <!-- 2. PRODUCT CONTROLLER (Frontend) -->

    <file path="catalog/controller/product/product.php">
        <operation>
            <search index="0"><![CDATA[
		    $this->load->model('catalog/category');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->model('catalog/parent_product'); //mod

		$this->load->helper('view_builder'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $this->document->addScript('catalog/view/javascript/jquery/blueimp/js/blueimp-gallery.min.js');
            $this->document->addStyle('catalog/view/javascript/jquery/blueimp/css/blueimp-gallery.min.css');

            $data['popup_view_data'] = $this->config->get($this->config->get('config_theme') . '_popup_view_data');
            $data['popup_view_text'] = $this->language->load('common/popup_view');
		    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['text_login'] = sprintf($this->language->get('text_login'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true));
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $data['text_login'] = sprintf($this->language->get('text_login_ajax'), 'getPopupLogin();', $this->url->link('account/register', '', true));
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
            $data['button_continue'] = $this->language->get('button_continue');
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $data['button_no_stock'] = $this->language->get('button_no_stock');
            $data['button_pre_order'] = $this->language->get('button_pre_order');

            $data['stock_checkout'] = $this->config->get('config_stock_checkout');
            $data['stock_display'] = $this->config->get('config_stock_display');
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['description'] = html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8');
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $data['description'] = html_entity_decode((!empty($category_info) && !empty($category_info['description']) ? $category_info['description'] : $product_info['description']), ENT_QUOTES, 'UTF-8'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if ($product_info['quantity'] <= 0) {
            ]]></search>
            <add position="replace" offset="6"><![CDATA[
		    $data['stock_qty'] = $product_info['quantity']; //mod

		    $data['stock'] = '<strong>' . $this->language->get('text_stock') . '</strong> ';

		    if ($product_info['quantity'] <= 0) {
				$data['stock'] .= $product_info['stock_status'];
			} elseif ($this->config->get('config_stock_display')) {
				$data['stock'] .= $product_info['quantity'];
			} else {
				$data['stock'] .= $this->language->get('text_instock');
			}
			]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->load->model('tool/image');
            ]]></search>
            <add position="after"><![CDATA[
            //Product variants
			if (!empty($category_info['product_display']) && $category_info['product_display']) {
			    $data['parent_heading_title'] = $category_info['name'];

			    if ($category_info['image']) {
			        $category_thumb = $this->model_tool_image->resize($category_info['image'], getimagesize(DIR_IMAGE . $category_info['image'])[0], getimagesize(DIR_IMAGE . $category_info['image'])[1]);

				    $data['category_thumb'] = array(
				        'thumb'      => $category_thumb,
				        'background' => '<div style="position: absolute; display: block; width: 100%; height: 100%; bottom: 0; opacity: 0.5; background: url(' . $category_thumb . ') center repeat-x;"></div>'
				    );
	    		} else {
	    		    $data['category_thumb'] = false;
	    		}

	    		$filter_data = array(
	    		    'filter_category_id' => $category_id
	    		);

			    $results = $this->model_catalog_product->getProducts($filter_data);

			    if ($category_info['search_related']) {
			        if ($category_info['search_regex']) {
			            $search_name = preg_replace($category_info['search_regex'], '', $category_info['name']);
                    } else {
			            $search_name = $category_info['name'];
                    }

                    $related_categories = $this->model_catalog_parent_product->getCategoriesByName($search_name, $category_info['category_id']);

                    if ($related_categories) {
                        foreach ($related_categories as $related_category) {
                            $filter_data = array(
                                'filter_category_id' => $related_category['category_id']
                            );

                            $related_results = $this->model_catalog_product->getProducts($filter_data);

                            if ($related_results) {
                                $results = array_merge($results, $related_results);
                            }
                        }
                    }
                }

                $data['product_variants'] = productVariantsView(
                    $this,
                    $product_id,
                    $results,
                    $category_info
                );
			}

            //Information
		    $this->load->model('catalog/information');

		    $data['nav_informations'] = array();

		    foreach ($this->model_catalog_information->getInformations() as $result) {
		    	if ($result['product']) {
		    		$data['nav_informations'][] = array(
		    		    'id'          => $result['information_id'],
		    			'title'       => $result['title'],
		    			'description' =>  html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')
		    		);
		    	}
		    }

            //mod
            if ($product_info['manufacturer_img']) {
                $data['manufacturer_img'] = $this->model_tool_image->resize($product_info['manufacturer_img'], $this->config->get($this->config->get('config_theme') . '_manufacturer_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_manufacturer_image_thumb_height'));
            } else {
                $data['manufacturer_img'] = false;
            }
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['popup'] = '';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $data['popup'] = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['thumb'] = '';
            ]]></search>
            <add position="replace" offset="-3"><![CDATA[
            //mod
            if ($product_info['image'] && $product_info['thumb_width'] && $product_info['thumb_height']) {
                $data['thumb'] = $this->model_tool_image->resize($product_info['image'], $product_info['thumb_width'], $product_info['thumb_height']);
                $data['small_thumb'] = $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
            } elseif ($product_info['image']) {
				$data['thumb'] = $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height'));
				$data['small_thumb'] = $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
			} elseif ($product_info['thumb_width'] && $product_info['thumb_height']) {
				$data['thumb'] = $this->model_tool_image->resize('placeholder.png', $product_info['thumb_width'], $product_info['thumb_height']);
				$data['small_thumb'] = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'));
			} else {
				$data['thumb'] = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height'));
				$data['small_thumb'] = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $results = $this->model_catalog_product->getProductImages($this->request->get['product_id']);
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            if ($results && $product_info['image'] && $product_info['thumb_width'] && $product_info['thumb_height']) {
                $big_width = $product_info['thumb_width'];
                $big_height = $product_info['thumb_height'];
            } elseif ($results) {
                $big_width = $this->config->get($this->config->get('config_theme') . '_image_thumb_width');
                $big_height = $this->config->get($this->config->get('config_theme') . '_image_thumb_height');
            }
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'))
            ]]></search>
            <add position="replace"><![CDATA[
                    //mod
                    'thumb'     => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
                    'big_thumb' => $this->model_tool_image->resize($result['image'], $big_width, $big_height)
                    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if ((float)$product_info['special']) {
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            if ((float)$product_info['special'] && $product_info['quantity'] > 0) {
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['special'] = false;
            ]]></search>
            <add position="after" offset="1"><![CDATA[
            //mod
            $special_logged = $this->model_catalog_product->getProductSpecialsLogged($this->request->get['product_id']);

            if ($data['price'] && !empty($special_logged['price']) && $product_info['quantity'] > 0) {
                $data['special_logged'] = sprintf($this->language->get('text_special_logged'), $this->currency->format($this->tax->calculate($data['price'] - $special_logged['price'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']));
            } else {
                $data['special_logged'] = false;
            }
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if ((float)$result['special']) {
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            if ((float)$result['special'] && $result['quantity'] > 0) { //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
                //mod
                $stock = $this->language->get('text_stock') . ' ';
                if ($result['quantity'] <= 0) {
                    $stock .= $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $stock .= $result['quantity'];
                } else {
                    $stock .= $this->language->get('text_instock');
                }

                $product_manufacturer = array();

                if ($result['manufacturer_id']) {
                    $product_manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($result['manufacturer_id']);

                    if ($product_manufacturer_info['image']) {
                        $logo = $this->model_tool_image->resize($product_manufacturer_info['image'], $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_width'), $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_height'));
                    } else {
                        $logo = false;
                    }

                    $product_manufacturer = array(
                        'name'            => $product_manufacturer_info['name'],
                        'logo'            => $logo,
                        'id'              => $product_manufacturer_info['manufacturer_id'],
                        'href'            => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $product_manufacturer_info['manufacturer_id'])
                    );
                }
                //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'rating'      => $rating,
            ]]></search>
            <add position="after"><![CDATA[
                    //mod
                    'stock'       => $stock,
                    'stock_qty'   => $result['quantity'],
                    'manufacturer' => $product_manufacturer,
                    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->response->setOutput($this->load->view('product/product', $data));
            ]]></search>
            <add position="replace"><![CDATA[
            //mod
            if (!empty($category_info['product_display']) && $category_info['product_display'] && file_exists(DIR_TEMPLATE  . $this->config->get('config_theme') . '/template/custom/product/' . $category_info['product_display'])) {
                $this->response->setOutput($this->load->view('custom/product/' . $category_info['product_display'], $data));
            } else {
                $this->response->setOutput($this->load->view('product/product', $data));
            }
            //mod
            ]]></add>
        </operation>
    </file>

    <!-- 3. MANUFACTURER CONTROLLER (Frontend) -->

    <file path="catalog/controller/product/manufacturer.php">
        <operation>
            <search index="1"><![CDATA[
            $this->load->model('tool/image');
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        $this->load->model('catalog/parent_product');

        $this->load->helper('view_builder');

        $this->document->addStyle('catalog/view/javascript/jquery/slick/slick.css');
		$this->document->addStyle('catalog/view/javascript/jquery/slick/slick-theme.css');
		$this->document->addScript('catalog/view/javascript/jquery/slick/slick.min.js');

        $data['popup_view_data'] = $this->config->get($this->config->get('config_theme') . '_popup_view_data');
        $data['popup_view_text'] = $this->language->load('common/popup_view');
        //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		    if (isset($this->request->get['sort'])) {
            ]]></search>
            <add position="before"><![CDATA[
        //mod
        if (isset($this->request->get['in_stock'])) {
            $in_stock = $this->request->get['in_stock'];
        } else {
            $in_stock = '';
        }

        if (isset($this->request->get['min_price'])) {
            $min_price = $this->request->get['min_price'];
        } else {
            $min_price = '';
        }

        if (isset($this->request->get['max_price'])) {
            $max_price = $this->request->get['max_price'];
        } else {
            $max_price = '';
        }
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $sort = 'p.sort_order';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $sort = 'p.quantity'; //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $order = 'ASC';
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $order = 'DESC'; //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['text_limit'] = $this->language->get('text_limit');
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $data['text_loading'] = $this->language->get('text_loading');

            $data['button_no_stock'] = $this->language->get('button_no_stock');
            $data['button_pre_order'] = $this->language->get('button_pre_order');

            $data['stock_checkout'] = $this->config->get('config_stock_checkout');
            $data['stock_display'] = $this->config->get('config_stock_display');

            $data['entry_in_stock'] = $this->language->get('entry_in_stock');
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				'filter_manufacturer_id' => $manufacturer_id,
            ]]></search>
            <add position="after"><![CDATA[
                'filter_in_stock'        => $in_stock, //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
            //mod
			if ($manufacturer_info['manufacturer_display']) {
                $this->load->model('catalog/category');

                if ($manufacturer_info['image']) {
                    $data['manufacturer_logo'] = array (
                        'image' => $this->model_tool_image->resize($manufacturer_info['image'], $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_width'), $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_height')),
                        'name'  => !empty($manufacturer_info['meta_h1']) ? $manufacturer_info['meta_h1'] : $manufacturer_info['name']
                    );
                } else {
                    $data['manufacturer_logo'] = false;
                }

                $data['parents_categories'] = array();

                $manufacturer_category_limit = 5;

                $filter_data = array(
                    'filter_manufacturer_id' => $manufacturer_id,
                    'filter_in_stock'        => $in_stock,
                    'filter_min_price'       => $min_price,
                    'filter_max_price'       => $max_price,
                    'start'                  => ($page - 1) * $manufacturer_category_limit,
                    'limit'                  => $manufacturer_category_limit,
                );

                $parents_categories = $this->model_catalog_parent_product->getParentInfoManufacturerProductsAnyType($filter_data);
                $parents_categories_total = $this->model_catalog_parent_product->getTotalParentInfoManufacturerProductsAnyType($filter_data);

                if ($parents_categories) {
                    $filter_data = array(
                        'filter_manufacturer_id' => $manufacturer_id,
                        'filter_in_stock'        => $in_stock,
                        'filter_min_price'       => $min_price,
                        'filter_max_price'       => $max_price,
                        'sort'                   => $sort,
                        'order'                  => $order
                    );

                    foreach ($parents_categories as $parent_category) {
                        $filter_data['filter_category_id'] = $parent_category['id']; //add $filter_data element

                        $results = $this->model_catalog_parent_product->getProductsAnyType($filter_data);

                        $products_any_type = productListView(
                            $this,
                            $products_type = 'products_manufacturer',
                            $results,
                            $category_info = false,
                            $url,
                            $in_stock,
                            $data,
                            $filter_data
                        );

                        if ($products_any_type) {
                            $data['parents_categories'][] = array(
                                'name'          => $parent_category['name'],
                                'link'          => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $manufacturer_id . '&category_id=' . $parent_category['id'])  . '#' . $parent_category['id'],
                                'category_id'   => $parent_category['id'],
                                'products'      => $products_any_type
                            );
                        }
                    }
                }

                $data['filter_price'] = $data['parents_categories'] ? $this->load->controller('common/filter/filter_price', $filter_data) : '';
                $data['filter_selected'] = $this->load->controller('common/filter/filter_selected', $this->request->get);
            }
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $product_total = $this->model_catalog_product->getTotalProducts($filter_data);
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $product_total = !$manufacturer_info['manufacturer_display'] ? $this->model_catalog_product->getTotalProducts($filter_data) : '0'; //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $results = $this->model_catalog_product->getProducts($filter_data);
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $results = !$manufacturer_info['manufacturer_display'] ? $this->model_catalog_product->getProducts($filter_data) : array(); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
                //mod
                $stock = $this->language->get('text_stock') . ' ';
			    if ($result['quantity'] <= 0) {
			        $stock .= $result['stock_status'];
			    } elseif ($this->config->get('config_stock_display')) {
			        $stock .= $result['quantity'];
			    }
			    $stock_qty = $result['quantity'];
			    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'price'       => $price,
            ]]></search>
            <add position="after"><![CDATA[
                    //mod
                    'stock'       => $stock,
                    'stock_qty'   => $stock_qty,
                    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['sorts'] = array();
            ]]></search>
            <add position="before"><![CDATA[
            //mod
            if ($manufacturer_info['manufacturer_display']) {
		        if (isset($this->request->get['min_price'])) {
                    $min_filter_price = '&min_price=' . $this->request->get['min_price'];
                } else {
                    $min_filter_price = '';
                }

                if (isset($this->request->get['max_price'])) {
                    $max_filter_price = '&max_price=' . $this->request->get['max_price'];
                } else {
                    $max_filter_price = '';
                }

                if (isset($this->request->get['in_stock'])) {
			    	$in_stock_filter = '&in_stock=true';
                } else {
			    	$in_stock_filter = '';
			    }

                $url_filter = array(
                    'min_filter_price'    => $min_filter_price,
                    'max_filter_price'    => $max_filter_price,
                    'in_stock_filter'     => $in_stock_filter
                );

			    $data['product_sorts'] = array();

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_default'),
			    	'value' => 'sort_order-ASC',
			    	'href'  => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_name_asc'),
			    	'value' => 'name-ASC',
			    	'href'  => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . '&sort=name&order=ASC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_name_desc'),
			    	'value' => 'name-DESC',
			    	'href'  => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . '&sort=name&order=DESC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_price_asc'),
			    	'value' => 'price-ASC',
			    	'href'  => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . '&sort=price&order=ASC' . $url . implode('', array_values($url_filter)))
			    );

			    $data['product_sorts'][] = array(
			    	'text'  => $this->language->get('text_price_desc'),
			    	'value' => 'price-DESC',
			    	'href'  => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . '&sort=price&order=DESC' . $url . implode('', array_values($url_filter)))
			    );
			}
			//mod
            ]]></add>
        </operation>
        <operation>
            <search index="2,3,4,5,6,7,8,9,10"><![CDATA[
			. $url)
			]]></search>
            <add position="replace" trim="true"><![CDATA[
            . $url . $in_stock_filter) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$pagination = new Pagination();
            ]]></search>
            <add position="replace" offset="21"><![CDATA[
            //mod
            if ($manufacturer_info['manufacturer_display']) {
                $pagination = new Pagination();
                $pagination->total = $parents_categories_total;
                $pagination->page = $page;
                $pagination->limit = $manufacturer_category_limit;
                $pagination->url = $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] .  $url . implode('', array_values($url_filter)) . '&page={page}');

                $data['pagination'] = $pagination->render();

                $data['results'] = sprintf($this->language->get('text_pagination'), ($parents_categories_total) ? (($page - 1) * $manufacturer_category_limit) + 1 : 0, ((($page - 1) * $manufacturer_category_limit) > ($parents_categories_total - $manufacturer_category_limit)) ? $parents_categories_total : ((($page - 1) * $manufacturer_category_limit) + $manufacturer_category_limit), $parents_categories_total, ceil($parents_categories_total / $manufacturer_category_limit));

                // http://googlewebmastercentral.blogspot.com/2011/09/pagination-with-relnext-and-relprev.html
                if ($page == 1) {
                    $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'], true), 'canonical');
                } elseif ($page == 2) {
                    $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'], true), 'prev');
                } else {
                    $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page='. ($page - 1), true), 'prev');
                }

                if ($limit && ceil($product_total / $limit) > $page) {
                    $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page='. ($page + 1), true), 'next');
                }
			} else {
			    $pagination = new Pagination();
			    $pagination->total = $product_total;
			    $pagination->page = $page;
			    $pagination->limit = $limit;
			    $pagination->url = $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] .  $url . '&page={page}');

			    $data['pagination'] = $pagination->render();

			    $data['results'] = sprintf($this->language->get('text_pagination'), ($product_total) ? (($page - 1) * $limit) + 1 : 0, ((($page - 1) * $limit) > ($product_total - $limit)) ? $product_total : ((($page - 1) * $limit) + $limit), $product_total, ceil($product_total / $limit));

			    // http://googlewebmastercentral.blogspot.com/2011/09/pagination-with-relnext-and-relprev.html
			    if ($page == 1) {
			        $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'], true), 'canonical');
			    } elseif ($page == 2) {
			        $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'], true), 'prev');
			    } else {
			        $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page='. ($page - 1), true), 'prev');
			    }

			    if ($limit && ceil($product_total / $limit) > $page) {
			        $this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page='. ($page + 1), true), 'next');
			    }
			}
			//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['limit'] = $limit;
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            $url_filter = array(
                'min_filter_price'    => $min_filter_price,
                'max_filter_price'    => $max_filter_price
            );

            $data['url'] = html_entity_decode($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . implode('', array_values($url_filter))), ENT_QUOTES, 'UTF-8');
            $data['in_stock'] = $in_stock;
            //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->response->setOutput($this->load->view('product/manufacturer_info', $data));
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            //mod
            if ($manufacturer_info['manufacturer_display'] && file_exists(DIR_TEMPLATE  . $this->config->get('config_theme') . '/template/custom/manufacturer/' . $manufacturer_info['manufacturer_display'])) {
                $this->response->setOutput($this->load->view('custom/manufacturer/' . $manufacturer_info['manufacturer_display'], $data));
            } else {
                $this->response->setOutput($this->load->view('product/manufacturer_info', $data));
            }
            //mod
            ]]></add>
        </operation>
    </file>

    <!-- 4. SPECIAL CONTROLLER (Frontend) -->

    <file path="catalog/controller/product/special.php">
        <operation>
            <search><![CDATA[
		    $this->load->model('catalog/product');
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        $this->load->model('catalog/manufacturer');
        $this->load->model('catalog/parent_product');

        $this->load->model('tool/image');

        $this->load->helper('view_builder');

        $this->document->addStyle('catalog/view/javascript/jquery/slick/slick.css');
		$this->document->addStyle('catalog/view/javascript/jquery/slick/slick-theme.css');
		$this->document->addScript('catalog/view/javascript/jquery/slick/slick.min.js');

        $data['popup_view_data'] = $this->config->get($this->config->get('config_theme') . '_popup_view_data');
        $data['popup_view_text'] = $this->language->load('common/popup_view');
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index=""><![CDATA[
		    $sort = $this->request->get['sort'];
            ]]></search>
            <add position="before" offset="1"><![CDATA[
        //mod
        if (isset($this->request->get['manufacturer_id'])) {
            $manufacturer_id = $this->request->get['manufacturer_id'];
        } else {
            $manufacturer_id = '';
        }

        if (isset($this->request->get['min_price'])) {
            $min_price = $this->request->get['min_price'];
        } else {
            $min_price = '';
        }

        if (isset($this->request->get['max_price'])) {
            $max_price = $this->request->get['max_price'];
        } else {
            $max_price = '';
        }
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$url .= '&sort=' . $this->request->get['sort'];
            ]]></search>
            <add position="before" offset="1"><![CDATA[
        //mod
        if (isset($this->request->get['manufacturer_id'])) {
            $url .= '&manufacturer_id=' . $this->request->get['manufacturer_id'];
        }
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $data['text_limit'] = $this->language->get('text_limit');
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        $data['text_stock'] = $this->language->get('text_stock');
        $data['text_discount'] = $this->language->get('text_discount');
        $data['text_points'] = $this->language->get('text_points');
        $data['text_to_manufacturer_page'] = $this->language->get('text_to_manufacturer_page');
        $data['text_filter_manufacturer'] = $this->language->get('text_filter_manufacturer');
        $data['text_loading'] = $this->language->get('text_loading');

        $data['button_pre_order'] = $this->language->get('text_pre_order');

        $data['entry_in_stock'] = $this->language->get('entry_in_stock');

        $data['stock_checkout'] = $this->config->get('config_stock_checkout');
        $data['stock_display'] = $this->config->get('config_stock_display');
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $data['products'] = array();
            ]]></search>
            <add position="replace" offset="56"><![CDATA[
        //mod
        if (isset($this->request->get['sort'])) {
			$sort_url = '&sort=' . $this->request->get['sort'];
		} else {
		    $sort_url = '';
		}

		if (isset($this->request->get['order'])) {
			$order_url = '&order=' . $this->request->get['order'];
		} else {
		    $order_url = '';
		}

        $filter_data = array (
            'filter_manufacturer_id' => $manufacturer_id,
            'filter_in_stock'        => true,
            'filter_special'         => true,
            'filter_min_price'       => $min_price,
            'filter_max_price'       => $max_price,
            'sort'                   => $sort,
            'order'                  => $order,
            'start'                  => ($page - 1) * $limit,
            'limit'                  => $limit
        );

        $results = $this->model_catalog_parent_product->getSpecialProductsAnyType($filter_data);

        $results_total = $this->model_catalog_parent_product->getTotalSpecialProductsAnyType($filter_data);

        $data['special_products'] = productListView(
            $this,
            $products_type = 'products_special',
            $results,
            $category_info = false,
            $url,
            $in_stock = true,
            $data,
            $filter_data
        );

        $product_total = $results_total;

        $data['filter_manufacturer'] = $this->load->controller('common/filter/filter_manufacturer', $filter_data);
        $data['filter_price'] = $this->load->controller('common/filter/filter_price', $filter_data);
        $data['filter_selected'] = $this->load->controller('common/filter/filter_selected', $this->request->get);
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['sorts'] = array();
            ]]></search>
            <add position="replace" offset="56"><![CDATA[
        //mod
		if (isset($this->request->get['manufacturer_id'])) {
			$manufacturer_filter = '&manufacturer_id=' . $this->request->get['manufacturer_id'];
        } else {
			$manufacturer_filter = '';
		}

		if (isset($this->request->get['min_price'])) {
            $min_filter_price = '&min_price=' . $this->request->get['min_price'];
        } else {
            $min_filter_price = '';
        }

        if (isset($this->request->get['max_price'])) {
            $max_filter_price = '&max_price=' . $this->request->get['max_price'];
        } else {
            $max_filter_price = '';
        }

        $url_filter = array(
            'manufacturer_filter' => $manufacturer_filter,
            'min_filter_price'    => $min_filter_price,
            'max_filter_price'    => $max_filter_price
        );

		$data['product_sorts'] = array();

		$data['product_sorts'][] = array(
			'text'  => $this->language->get('text_default'),
			'value' => 'sort_order-ASC',
			'href'  => $this->url->link('product/special', $url . implode('', array_values($url_filter)))
		);

		$data['product_sorts'][] = array(
			'text'  => $this->language->get('text_name_asc'),
			'value' => 'name-ASC',
			'href'  => $this->url->link('product/special', 'sort=name&order=ASC' . $url . implode('', array_values($url_filter)))
		);

		$data['product_sorts'][] = array(
			'text'  => $this->language->get('text_name_desc'),
			'value' => 'name-DESC',
			'href'  => $this->url->link('product/special', 'sort=name&order=DESC' . $url . implode('', array_values($url_filter)))
		);

		$data['product_sorts'][] = array(
			'text'  => $this->language->get('text_price_asc'),
			'value' => 'price-ASC',
			'href'  => $this->url->link('product/special', 'sort=price&order=ASC' . $url . implode('', array_values($url_filter)))
		);

		$data['product_sorts'][] = array(
			'text'  => $this->language->get('text_price_desc'),
			'value' => 'price-DESC',
			'href'  => $this->url->link('product/special', 'sort=price&order=DESC' . $url . implode('', array_values($url_filter)))
		);
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $url . '&limit=' . $value)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $url . implode('', array_values($url_filter)) . '&limit=' . $value) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $url . '&page={page}');
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $url . implode('', array_values($url_filter)) . '&page={page}'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->document->addLink($this->url->link('product/special', 'page='. ($page + 1), true), 'next');
            ]]></search>
            <add position="replace" offset="-9"><![CDATA[
        //mod
		if ($page == 1) {
		    $this->document->addLink($this->url->link('product/special', '', true), 'canonical');
		} elseif ($page == 2) {
		    $this->document->addLink($this->url->link('product/special', '', true), 'canonical');
		    $this->document->addLink($this->url->link('product/special', '', true), 'prev');
		} else {
		    $this->document->addLink($this->url->link('product/special', '', true), 'canonical');
		    $this->document->addLink($this->url->link('product/special', 'page='. ($page - 1), true), 'prev');
		}

		if ($limit && ceil($product_total / $limit) > $page) {
		    $this->document->addLink($this->url->link('product/special', 'page='. ($page + 1), true), 'next'); //mod
            ]]></add>
        </operation>
    </file>

    <!-- 5. SEARCH CONTROLLER (Frontend) -->

    <file path="catalog/controller/product/search.php">
        <operation>
            <search><![CDATA[
            if (isset($this->request->get['search']) || isset($this->request->get['tag'])) {
            ]]></search>
            <add position="after"><![CDATA[
            $this->load->model('catalog/manufacturer');
            $this->load->model('catalog/parent_product');

            $data['popup_view_data'] = $this->config->get($this->config->get('config_theme') . '_popup_view_data');
            $data['popup_view_text'] = $this->language->load('common/popup_view');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'filter_sub_category' => $sub_category,
            ]]></search>
            <add position="after"><![CDATA[
				'filter_in_stock'     => $in_stock, //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
                //mod
                $special_logged_info = $this->model_catalog_product->getProductSpecialsLogged($result['product_id']);

                if (!empty($special_logged_info['price']) && $result['quantity'] > 0) {
                    $special_logged_text = sprintf($this->language->get('text_special_logged'), $this->currency->format($this->tax->calculate($result['price'] - $special_logged_info['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']));
                    $special_percent = round(($result['price'] - $special_logged_info['price']) / ($result['price']/100)) . '%';
                } elseif ((float)$result['special'] && $result['quantity'] > 0) {
                    $special_logged_text = false;
                    $special_percent = round(($result['price'] - $result['special']) / ($result['price']/100)) . '%';
                } else {
                    $special_logged_text = false;
                    $special_percent = false;
                }

                $product_stock = $this->language->get('text_stock') . ' ';
                if ($result['quantity'] <= 0) {
                    $product_stock .= $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $product_stock .= $result['quantity'];
                }

                $product_manufacturer = array();

                if ($result['manufacturer_id']) {
                    $product_manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($result['manufacturer_id']);

                    if ($product_manufacturer_info['image']) {
                        $logo = $this->model_tool_image->resize($product_manufacturer_info['image'], $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_width'), $this->config->get($this->config->get('config_theme') . '_manufacturer_image_product_height'));
                    } else {
                        $logo = false;
                    }

                    $product_manufacturer = array(
                        'name'            => $product_manufacturer_info['name'],
                        'image'           => $logo,
                        'id'              => $product_manufacturer_info['manufacturer_id'],
                        'href'            => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $product_manufacturer_info['manufacturer_id'])
                    );
                }

                $data['filter_selected'] = $this->load->controller('common/filter/filter_selected', $this->request->get);
                //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'name'        => $result['name'],
            ]]></search>
            <add position="after"><![CDATA[
                    //mod
                    'special_percent'  => $special_logged_text ? $special_logged_text : $special_percent,
                    'stock'            => $product_stock,
                    'stock_qty'        => $result['quantity'],
                    'manufacturer'     => $product_manufacturer,
                    //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'] . $url)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id']) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['entry_description'] = $this->language->get('entry_description');
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        $data['text_to_manufacturer_page'] = $this->language->get('text_to_manufacturer_page');
        $data['text_loading'] = $this->language->get('text_loading');

        $data['entry_in_stock'] = $this->language->get('entry_in_stock');

        $data['stock_checkout'] = $this->config->get('config_stock_checkout');
        $data['stock_display'] = $this->config->get('config_stock_display');

        $data['button_no_stock'] = $this->language->get('button_no_stock');
        $data['button_pre_order'] = $this->language->get('button_pre_order');
        //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
            if (isset($this->request->get['search'])) {
            ]]></search>
            <add position="before"><![CDATA[
        //mod
        if (isset($this->request->get['in_stock'])) {
            $in_stock = $this->request->get['in_stock'];
        } else {
            $in_stock = '';
        }
        //mod
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
            $url = '';
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        if (isset($this->request->get['in_stock'])) {
			$in_stock_filter = '&in_stock=true';
        } else {
			$in_stock_filter = '';
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search index="1,2,3"><![CDATA[
            $url = '';
            ]]></search>
            <add position="after"><![CDATA[
            //mod
            if (isset($this->request->get['in_stock'])) {
				$in_stock_filter = '&in_stock=true';
            } else {
				$in_stock_filter = '';
			}
			//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $url)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $url . $in_stock_filter) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $url . '&limit=' . $value)
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $url . '&limit=' . $value . $in_stock_filter) //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $url . '&page={page}');
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            $url . '&page={page}' . $in_stock_filter); // mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['sort'] = $sort;
            ]]></search>
            <add position="before"><![CDATA[
        //mod
        $data['url'] = html_entity_decode($this->url->link('product/search', $url), ENT_QUOTES, 'UTF-8');
        $data['in_stock'] = $in_stock;
        //mod
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
            if ($this->config->get('config_review_status')) {
            ]]></search>
            <add position="replace" offset="24"><![CDATA[
            //Delete //mod
            ]]></add>
        </operation>
    </file>

    <!-- 6. FEATURED MODULE CONTROLLER (Frontend) -->

    <file path="catalog/controller/extension/module/featured.php">
        <operation>
            <search><![CDATA[
		    $data['heading_title'] = $this->language->get('heading_title');
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
        $data['heading_title'] = $setting['heading'] ? $setting['name'] : $this->language->get('heading_title');
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if (!empty($setting['product'])) {
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
        if ($setting['category_selected']) {
            $data['category_url'] = sprintf($this->language->get('text_category_url'), 'index.php?route=product/category&path=' . $setting['category_selected']);

    	    $filter_data = array(
	            'filter_category_id'  => $setting['category_selected'],
	            'filter_sub_category' => true,
                'limit'               => $setting['limit'],
                'start'               => 0
            );

            $products = $this->model_catalog_product->getProducts($filter_data);

            if ($products) {
                foreach ($products as $product) {
                    if ($product['image']) {
                    $image = $this->model_tool_image->resize($product['image'], $setting['width'], $setting['height']);
                    } else {
                        $image = $this->model_tool_image->resize('placeholder.png', $setting['width'], $setting['height']);
                    }

                    if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
                        $price = $this->currency->format($this->tax->calculate($product['price'], $product['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                    } else {
                        $price = false;
                    }

                    if ((float)$product['special']) {
                        $special = $this->currency->format($this->tax->calculate($product['special'], $product['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                    } else {
                        $special = false;
                    }

                    if ($this->config->get('config_tax')) {
                        $tax = $this->currency->format((float)$product['special'] ? $product['special'] : $product['price'], $this->session->data['currency']);
                    } else {
                        $tax = false;
                    }

                    if ($this->config->get('config_review_status')) {
                        $rating = $product['rating'];
                    } else {
                        $rating = false;
                    }

                    $data['products'][] = array(
                        'product_id' => $product['product_id'],
                        'thumb' => $image,
                        'name' => $product['name'],
                        'description' => utf8_substr(strip_tags(html_entity_decode($product['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
                        'price' => $price,
                        'special' => $special,
                        'tax' => $tax,
                        'minimum' => $product['minimum'] > 0 ? $product['minimum'] : 1,
                        'rating' => $rating,
                        'href' => $this->url->link('product/product', 'product_id=' . $product['product_id'])
                    );
                }
            }
        } elseif (!empty($setting['product'])) { //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if ($data['products']) {
            ]]></search>
            <add position="replace"><![CDATA[
        //mod
        if (($data['products'] || $setting['category_selected']) && $setting['display'] && file_exists(DIR_TEMPLATE  . $this->config->get('config_theme') . '/template/custom/module/' . $setting['display'])) {
            return $this->load->view('custom/module/featured' . $setting['display'], $data);
        } elseif ($data['products'] || $setting['category_selected']) { //mod
            ]]></add>
        </operation>
    </file>

    <!-- 7. HEADER CONTROLLER (Frontend) -->

    <file path="catalog/controller/common/header.php">
        <operation>
            <search><![CDATA[
            if ($this->config->get($analytic['code'] . '_status')) {
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            if ($analytic['code'] == 'google_analytics' && $this->config->get($analytic['code'] . '_status')) { //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['text_all'] = $this->language->get('text_all');
            ]]></search>
            <add position="replace">
        $data['text_all'] = $this->language->get('text_all');
        $data['text_manufacturer'] = $this->language->get('text_manufacturer');
        $data['text_return'] = $this->language->get('text_return');
        $data['text_special'] = $this->language->get('text_special');
        $data['text_contact'] = $this->language->get('text_contact');
        $data['text_for_customer'] = $this->language->get('text_for_customer');
        $data['text_about_us'] = $this->language->get('text_about_us');

        $data['button_back'] = $this->language->get('button_back');
            </add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['contact'] = $this->url->link('information/contact');
            ]]></search>
            <add position="replace"><![CDATA[
        $data['contact'] = $this->url->link('information/contact');
        $data['manufacturer'] = $this->url->link('product/manufacturer');
        $data['special'] = $this->url->link('product/special');
        $data['return'] = $this->url->link('account/return/add', '', true);
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $data['telephone'] = $this->config->get('config_telephone');
            ]]></search>
            <add position="replace"><![CDATA[
        $data['telephone'] = $this->config->get('config_telephone');
		$data['email'] = $this->config->get('config_email');
        $data['open'] = $this->config->get('config_open');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['categories'] = array();
            ]]></search>
            <add position="before"><![CDATA[
        //mod
		if (isset($this->request->get['path'])) {
		    $get_parts = explode('_', (string)$this->request->get['path']);

            $category_id = (int)array_pop($get_parts);

            $parts = array();

            $full_path = $this->model_catalog_category->getFullBreadcrumbPath($category_id);

            for ($i = 0; $i < count($full_path); $i++) {
                $parts[] = $full_path[$i]['path_id'];
            }
		} elseif (isset($this->request->get['product_id'])) {
		    $this->load->model('catalog/parent_product');

		    $category_id_info = $this->model_catalog_parent_product->getParentCategoryId($this->request->get['product_id']);

		    if ($category_id_info) {
		        $parts = array();

                $full_path = $this->model_catalog_category->getFullBreadcrumbPath($category_id_info['category_id']);

                for ($i = 0; $i < count($full_path); $i++) {
                    $parts[] = $full_path[$i]['path_id'];
                }
		    }
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $data['language'] = $this->load->controller('common/language');
            ]]></search>
            <add position="before"><![CDATA[
        //mod
		$this->load->model('catalog/information');

		$data['informations'] = array();

		foreach ($this->model_catalog_information->getInformations() as $result) {
			if ($result['top']) {
				$data['informations'][] = array(
					'title' => $result['title'],
					'href'  => $this->url->link('information/information', 'information_id=' . $result['information_id'])
				);
			}
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			'name'     => $category['name'],
            ]]></search>
            <add position="after"><![CDATA[
					'active'   => (!empty($parts) && in_array($category['category_id'], $parts)) ? true : false, //mod
            ]]></add>
        </operation>
    </file>

   <!-- 8. FOOTER CONTROLLER (Frontend) -->

    <file path="catalog/controller/common/footer.php">
        <operation>
            <search><![CDATA[
            $data['scripts'] = $this->document->getScripts('footer');
            ]]></search>
            <add position="after"><![CDATA[
		//mod
		// Analytics
		$this->load->model('extension/extension');

		$data['analytics'] = array();

		$analytics = $this->model_extension_extension->getExtensions('analytics');

		foreach ($analytics as $analytic) {
			if ($analytic['code'] == 'yandex_metrics' && $this->config->get($analytic['code'] . '_status')) {
				$data['analytics'][] = $this->load->controller('extension/analytics/' . $analytic['code'], $this->config->get($analytic['code'] . '_status'));
			}
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['text_newsletter'] = $this->language->get('text_newsletter');
            ]]></search>
            <add position="after"><![CDATA[
		$data['text_catalog'] = $this->language->get('text_catalog'); //mod
        $data['text_public_offer'] = $this->language->get('text_public_offer'); //mod
        $data['text_open_map'] = $this->language->get('text_open_map'); //mod
        $data['text_close_map'] = $this->language->get('text_close_map'); //mod
        $data['text_contacts'] = $this->language->get('text_contacts'); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $data['newsletter'] = $this->url->link('account/newsletter', '', true);
            ]]></search>
            <add position="after"><![CDATA[
        //mod
        $data['catalog'] = $this->url->link('product/catalog');
        $data['name'] = $this->config->get('config_name');
        $data['address'] = nl2br($this->config->get('config_address'));
        $data['telephone'] = $this->config->get('config_telephone');
        $data['open'] = nl2br($this->config->get('config_open'));
        $data['email'] = $this->config->get('config_email');
        //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $this->load->model('catalog/information');
            ]]></search>
            <add position="before"><![CDATA[
		//mod
		$this->document->addStyle('catalog/view/javascript/jquery/magnific/magnific-popup.css');
        $this->document->addScript('catalog/view/javascript/jquery/magnific/jquery.magnific-popup.min.js');

        $this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
		$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');

        $this->document->addStyle('catalog/view/javascript/jquery/flexslider/flexslider.css');
        $this->document->addScript('catalog/view/javascript/jquery/flexslider/jquery.flexslider-min.js');

        $this->document->addStyle('catalog/view/theme/dm_project/stylesheet/popup_view/fastview.css');

        $data['map_data'] = $this->config->get($this->config->get('config_theme') . '_map_data');

		if ($this->request->server['HTTPS']) {
			$server = $this->config->get('config_ssl');
		} else {
			$server = $this->config->get('config_url');
		}

		if (is_file(DIR_IMAGE . $this->config->get('config_logo_footer'))) {
			$data['logo'] = $server . 'image/' . $this->config->get('config_logo_footer');
		} else {
			$data['logo'] = '';
		}

		$this->load->model('catalog/category');

		$data['categories'] = array();

		$categories = $this->model_catalog_category->getCategories(0);

		foreach ($categories as $category) {
			if ($category['top']) {
				$data['categories'][] = array(
					'name'     => $category['name'],
					'href'     => $this->url->link('product/category', 'path=' . $category['category_id'])
				);
			}
		}
		//mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		    $data['informations'] = array();
            ]]></search>
            <add position="after"><![CDATA[
		$data['informations_help'] = array(); //mod
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            if ($result['bottom']) {
            ]]></search>
            <add position="replace"><![CDATA[
            if ($result['bottom_help']) {
				$data['informations_help'][] = array(
					'title' => $result['title'],
					'href'  => $this->url->link('information/information', 'information_id=' . $result['information_id'])
				);
			} elseif ($result['bottom']) { //mod
            ]]></add>
        </operation>
    </file>

    <!-- 9. HOME CONTROLLER (Frontend) -->

    <file path="catalog/controller/common/home.php">
        <operation>
            <search><![CDATA[
		    $data['content_top'] = $this->load->controller('common/content_top');
            ]]></search>
            <add position="after"><![CDATA[
        $data['content_middle'] = $this->load->controller('common/content_middle'); //mod
            ]]></add>
        </operation>
    </file>

    <!-- 10. CART CONTROLLER (Frontend) -->

    <file path="catalog/controller/common/cart.php">
        <operation>
            <search><![CDATA[
            $data['text_items'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
            ]]></search>
            <add position="replace"><![CDATA[
        $data['text_items'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
        $data['count_products'] = $this->cart->countProducts();
            ]]></add>
        </operation>
    </file>

    <!-- *** //END CONTROLLER (Frontend)// *** -->



    <!-- START TEMPLATE (Frontend) -->

    <!-- MANUFACTURER TEMPLATE (Frontend) -->

    <file path="catalog/view/theme/*/template/product/manufacturer_info.tpl">
        <operation>
            <search><![CDATA[
            <?php if ($product['price']) { ?>
            ]]></search>
            <add position="before"><![CDATA[
            <?php if ($stock_display) { ?>
                <p><?php echo $product['stock']; ?></p>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            <button type="button" onclick="cart.add('<?php echo $product['product_id']; ?>', '<?php echo $product['minimum']; ?>');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md"><?php echo $button_cart; ?></span></button>
            ]]></search>
            <add position="replace" trim="true"><![CDATA[
            <?php if ($product['stock_qty'] > 0) { ?>
			    <button type="button" onclick="cart.add('<?php echo $product['product_id']; ?>', '<?php echo $product['minimum']; ?>');"><i class="fa fa-shopping-cart"></i> <?php echo $button_cart; ?></button>
            <?php } elseif ($stock_checkout) { ?>
                <button type="button" onclick="cart.add('<?php echo $product['product_id']; ?>', '<?php echo $product['minimum']; ?>');"><i class="fa fa-shopping-cart"></i> <?php echo $button_pre_order; ?></button>
            <?php } else { ?>
			    <button type="button" class="nostock-btn"><i class="fa fa-info" aria-hidden="true"></i> <?php echo $button_no_stock; ?></button>
			<?php } ?>
			]]></add>
        </operation>
    </file>

    <!-- //END TEMPLATE (Frontend)// -->

    <!-- ======================================= //END FRONTEND// ======================================= -->

</modification>
